{"version":3,"sources":["register/components/Register.js","navbar/components/Navbar.js","main/admin/components/candidates/Candidates.js","main/admin/components/assignments/Assignments.js","main/admin/components/evaluators/Evaluators.js","login/components/auth.js","login/components/Login.js","main/admin/components/Cards.js","main/admin/components/Admin.js","login/components/protectedRoute.js","App.jsx","registerServiceWorker.js","index.js"],"names":["RegisterPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addEvaluator","horarySelected","getScheduleId","console","log","axios","post","request","msg","name","state","email","phone","academic_level","horary","status","then","aproveAlert","catch","error","horarioNum","horarioString","handleChange","event","target","value","type","checked","setState","defineProperty","Swal","fire","react_default","a","createElement","mdbreact_esm","center","className","size","md","lg","label","onChange","icon","group","validate","success","color","onClick","Component","NavbarPage","isOpen","toggleCollapse","dark","expand","id","navbar","right","to","columns","field","sort","rejectAlert","title","text","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","result","i","dataRows","length","handle","Candidates","Navbar","fluid","btn","responsive","hover","rows","Assignments","nombre","nivel","curso","toggle","modal","toggleModal","handleClick","e","bind","assertThisInitialized","titulo","descrip","idActual","_this2","Evaluators","correo","telefono","horario","vecesClick","hint","toString","disabled","auth","Auth","authenticated","cb","LoginPage","login","history","push","Cards","sm","style","height","fontSize","descripcion","Link","link","info","cards","Admin","map","item","components_Cards","assign","key","ProtectedRoute","_ref","component","rest","objectWithoutProperties","Route","render","isAuthenticated","Redirect","pathname","form","location","App","BrowserRouter","Switch","exact","path","Register","protectedRoute_ProtectedRoute","Login","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7b9bcb61.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBIcon } from 'mdbreact';\r\nimport './Register.css';\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\n\r\nclass RegisterPage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n     \r\n    this.state ={\r\n      name:'',\r\n      email:\"\",\r\n      phone:\"\",       \r\n      academic_level:\"\",       \r\n      horary:\"\",       \r\n      status:0 \r\n\r\n    }\r\n  } \r\n\r\n  addEvaluator = () => {\r\n    var horarySelected = this.getScheduleId()\r\n    console.log(horarySelected)\r\n    axios.post('http://localhost:3001/evaluators/add', {\r\n      request: {\r\n        msg: {\r\n            name:this.state.name,\r\n            email:this.state.email,\r\n            phone:this.state.phone,       \r\n            academic_level:this.state.academic_level,       \r\n            horary: horarySelected,       \r\n            status:0,\r\n\r\n        }\r\n    }\r\n    })\r\n    .then(this.aproveAlert)\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n  getScheduleId = () =>{\r\n    var horarioString = this.state.horary\r\n    var horarioNum\r\n    console.log(horarioString)\r\n    switch(horarioString  ){\r\n      case 'Jueves 8:00am-12:00pm':\r\n        horarioNum = 1\r\n        break;\r\n      case 'Jueves 1:00pm-4:00pm':\r\n        horarioNum = 2\r\n        break;\r\n      case 'Viernes 8:00am-12:00pm':\r\n        horarioNum = 3\r\n        break;\r\n      case 'Viernes 1:00pm-4:00pm':\r\n        horarioNum = 4\r\n          break;\r\n      case 'Sabado 8:00am-12:00pm':\r\n        horarioNum = 5\r\n        break;\r\n      case 'Sabado 1:00pm-4:00pm':\r\n        horarioNum = 6\r\n        break;\r\n      case 'Domingo 8:00am-12:00pm':\r\n        horarioNum = 7\r\n        break;\r\n      case 'Domingo 1:00pm-4:00pm':\r\n        horarioNum = 8\r\n          break;\r\n    }\r\n    return horarioNum;\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  aproveAlert(){\r\n    Swal.fire(\r\n        '¡Enviado!',\r\n        'Registro enviado, espera a ser contactado por personal del ITR.',\r\n        'success'\r\n      )\r\n  };\r\n\r\n\r\n\r\n\r\n  \r\nrender(){\r\n    return (\r\n      <div>\r\n          <MDBContainer>\r\n            <MDBRow center className=\"my-5\">\r\n              <MDBCol size=\"12\" md=\"8\" lg=\"6\">\r\n                <MDBCard>\r\n                  <MDBCardBody>\r\n                    <form>\r\n                      <p className=\"h4 text-center py-4\">Registro de Evaluadores</p>\r\n                      <div className=\"teal-text\">\r\n                        <MDBInput\r\n                          label=\"Nombre completo\"\r\n                          name=\"name\"\r\n                          value={this.state.name}\r\n                          onChange={this.handleChange}\r\n                          icon=\"user\"\r\n                          group\r\n                          type=\"text\"\r\n                          validate\r\n                          error=\"wrong\"\r\n                          success=\"right\"\r\n                        />\r\n                        <MDBInput\r\n                          label=\"Correo electronico\"\r\n                          icon=\"envelope\"\r\n                          name=\"email\"\r\n                          value={this.state.email}\r\n                          onChange={this.handleChange}\r\n                          group\r\n                          type=\"email\"\r\n                          validate\r\n                          error=\"wrong\"\r\n                          success=\"right\"\r\n                        />\r\n                        <MDBInput\r\n                          label=\"Telefono\"\r\n                          icon=\"hashtag\"\r\n                          name=\"phone\"\r\n                          value={this.state.phone}\r\n                          onChange={this.handleChange}\r\n                          group\r\n                          type=\"number\"\r\n                          validate\r\n                          error=\"wrong\"\r\n                          success=\"right\"\r\n                        />\r\n                        <MDBRow className=\"mb-4\">\r\n                          <MDBCol size=\"1\">\r\n                            <MDBIcon icon=\"calendar-alt\" className=\"iconRegister\" />\r\n                          </MDBCol>\r\n                          <MDBCol>\r\n                            <select name=\"horary\" className=\"browser-default custom-select\" value={this.state.horary} onChange={this.handleChange} >\r\n                              <option>Seleccione un horario...</option>\r\n                              <option value=\"Jueves 8:00am-12:00pm\">Jueves 8:00am-12:00pm</option>\r\n                              <option value=\"Jueves 1:00pm-4:00pm\">Jueves 1:00pm-4:00pm</option>\r\n                              <option value=\"Viernes 8:00am-12:00pm\">Viernes 8:00am-12:00pm</option>\r\n                              <option value=\"Viernes 1:00pm-4:00pm\">Viernes 1:00pm-4:00pm</option>\r\n                              <option value=\"Sabado 8:00am-12:00pm\">Sabado 8:00am-12:00pm</option>\r\n                              <option value=\"Sabado 1:00pm-4:00pm\">Sabado 1:00pm-4:00pm</option>\r\n                              <option value=\"Domingo 8:00am-12:00pm\">Domingo 8:00am-12:00pm</option>\r\n                              <option value=\"Domingo 1:00pm-4:00pm\">Domingo 1:00pm-4:00pm</option>\r\n                            </select>\r\n                          </MDBCol>\r\n                        </MDBRow>\r\n                        <MDBRow className=\"mt-4 pt-2\">\r\n                          <MDBCol size=\"1\">\r\n                            <MDBIcon icon=\"university\" className=\"iconRegister\" />\r\n                          </MDBCol>\r\n                          <MDBCol>\r\n                            <select name=\"academic_level\" className=\"browser-default custom-select\" value={this.state.academic_level} onChange={this.handleChange} >\r\n                              <option>Seleccione un grado academico...</option>\r\n                              <option value=\"Bachillerato Técnico\">Bachillerato Técnico</option>\r\n                              <option value=\"Tecnico Universitario\">Tecnico Universitario</option>\r\n                              <option value=\"Ingenieria\">Ingenieria</option>\r\n                              <option value=\"Licenciatura\">Licenciatura</option>\r\n                              <option value=\"Maestria\">Maestria</option>\r\n                              <option value=\"Doctorado\">Doctorado</option>\r\n                            </select>\r\n                          </MDBCol>\r\n                        </MDBRow>\r\n                      </div>\r\n  \r\n                      <div className=\"text-center py-4 mt-3\">\r\n                          <MDBBtn color=\"teal\"  onClick={this.addEvaluator}>\r\n                            Enviar\r\n                            <MDBIcon icon=\"paper-plane\" className=\"ml-2\"/>\r\n                          </MDBBtn>\r\n                      </div>\r\n                    </form>\r\n                  </MDBCardBody>\r\n                </MDBCard>\r\n              </MDBCol>\r\n            </MDBRow> \r\n          </MDBContainer>\r\n        </div>\r\n        \r\n    );\r\n  };\r\n}\r\n\r\n\r\n\r\nexport default RegisterPage;","import React, { Component } from \"react\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse} from \"mdbreact\";\r\nclass NavbarPage extends Component {\r\nstate = {\r\n  isOpen: false\r\n};\r\n\r\ntoggleCollapse = () => {\r\n  this.setState({ isOpen: !this.state.isOpen });\r\n}\r\n\r\n\r\nrender() {\r\n  return (\r\n      <MDBNavbar color=\"default-color\" dark expand=\"md\">\r\n        <MDBNavbarBrand>\r\n          <strong className=\"white-text d-none d-md-block\">Sistema de Control de Evaluadores</strong>\r\n          <strong className=\"white-text d-block d-md-none\">SCE</strong>\r\n        </MDBNavbarBrand>\r\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n          <MDBNavbarNav right>\r\n            <MDBNavItem>\r\n              <MDBNavLink to=\"/admin\">Administrador</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink to=\"/admin\">Usuario</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink to=\"/login\">Cerrar Sesión</MDBNavLink>\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n          \r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n\r\n    );\r\n  }\r\n\r\nhandleClick(){\r\n\r\n  }\r\n}\r\n\r\nexport default NavbarPage;","import React from \"react\";\r\nimport {\r\n    MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBCardHeader,\r\n    MDBTableHead, MDBTable, MDBTableBody, MDBBtn, MDBIcon\r\n} from 'mdbreact';\r\nimport Navbar from '../../../../navbar/components/Navbar';\r\nimport dataRows from './Candidates.json';\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst columns = [\r\n    {\r\n        label: '#',\r\n        field: 'id',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Nombre',\r\n        field: 'nombre',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Correo',\r\n        field: 'correo',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Telefono',\r\n        field: 'telefono',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Horario',\r\n        field: 'horario',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Nivel Academico',\r\n        field: 'nivel',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Acciones',\r\n        field: 'acciones',\r\n        sort: 'asc'\r\n    }\r\n\r\n];\r\n\r\nfunction aproveAlert(){\r\n    Swal.fire(\r\n        '¡Aprobado!',\r\n        'Evaluador aprobado.',\r\n        'success'\r\n      )\r\n};\r\n\r\nfunction rejectAlert(){\r\n    Swal.fire({\r\n        title: '¿Estas seguro?',\r\n        text: \"No podras recuperar la información de un candidato rechazado.\",\r\n        type: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        cancelButtonText:'Cancelar',\r\n        confirmButtonText: 'Si, rechazar'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          Swal.fire(\r\n            '¡Rechazado!',\r\n            'Evaluador rechazado.',\r\n            'success'\r\n          )\r\n        }\r\n      })\r\n}\r\n\r\n\r\nfor (var i = 0; i < dataRows.length; i++) {\r\n    dataRows[i].handle = \r\n    <div className=\"text-center\">\r\n        <MDBBtn color=\"green\" size=\"sm\" onClick={aproveAlert}><MDBIcon icon=\"check\" className=\"mr-2\" /> Aprobar</MDBBtn>\r\n        <MDBBtn color=\"red\" size=\"sm\" onClick={rejectAlert}><MDBIcon icon=\"times\" className=\"mr-2\" /> Rechazar</MDBBtn>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst Candidates = () => {\r\n    return (\r\n        <div className=\"text-center\">\r\n        <Navbar/>\r\n            <MDBContainer fluid>\r\n                <MDBRow center className=\"my-5\">\r\n                    <MDBCol>\r\n                        <MDBCard>\r\n                            <MDBCardHeader>\r\n                                <h1 className=\"text-center\">Candidatos a Evaluadores</h1>\r\n                            </MDBCardHeader>\r\n                            <MDBCardBody>\r\n                                <MDBTable btn responsive hover>\r\n                                    <MDBTableHead columns={columns} />\r\n                                    <MDBTableBody rows={dataRows} />\r\n                                </MDBTable>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Candidates;","import React, { Component } from \"react\";\r\nimport {\r\n    MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBCardHeader,\r\n    MDBBtn, MDBIcon, MDBTable,MDBTableHead, MDBTableBody, MDBInput, MDBModal,MDBModalHeader,MDBModalBody\r\n} from 'mdbreact';\r\nimport Navbar from '../../../../navbar/components/Navbar';\r\nimport Swal from 'sweetalert2'\r\n\r\nclass Assignments extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: false,\r\n            id: 0,\r\n            nombre: '',\r\n            nivel: '',\r\n            curso: ''\r\n          }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        }\r\n    \r\n\r\n\r\n\r\n    aproveAlert(titulo,descrip){\r\n        Swal.fire(\r\n            titulo,\r\n            descrip,\r\n            'success'\r\n          )\r\n    };\r\n    \r\n    rejectAlert(){\r\n        Swal.fire({\r\n            title: '¿Estas seguro?',\r\n            text: \"No podras recuperar la información de un candidato rechazado.\",\r\n            type: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            cancelButtonText:'Cancelar',\r\n            confirmButtonText: 'Si, rechazar'\r\n          }).then((result) => {\r\n            if (result.value) {\r\n              Swal.fire(\r\n                '¡Rechazado!',\r\n                'Evaluador rechazado.',\r\n                'success'\r\n              )\r\n            }\r\n          })\r\n    }\r\n    \r\n    columns = [\r\n        {\r\n            label: '#',\r\n            field: 'id',\r\n            sort: 'asc'\r\n        },\r\n        {\r\n            label: 'Evaluador',\r\n            field: 'evaluador',\r\n            sort: 'asc'\r\n        },\r\n        {\r\n            label: 'Nivel',\r\n            field: 'nivel',\r\n            sort: 'asc'\r\n        },\r\n        {\r\n            label: 'Curso',\r\n            field: 'curso',\r\n            sort: 'asc'\r\n        }\r\n    \r\n    ];\r\n    \r\n    dataRows = [\r\n        {\r\n            \"id\": 1,\r\n            \"nombre\": \"Steven Benjamin Diaz Flores\",\r\n            \"nivel\": \"Primer año bachillerato\",\r\n            \"curso\": \"Desarrollo de Software Grupo 1\",\r\n            \"handle\": \"\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"nombre\": \"Rodrigo Alejandro Castillo Monterrosa\",\r\n            \"nivel\": \"Primer año bachillerato\",\r\n            \"curso\": \"Desarrollo de Software Grupo 1\",\r\n            \"handle\": \"\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"nombre\": \"Katherine Michelle Fuentes Medrano\",\r\n            \"nivel\": \"Primer año bachillerato\",\r\n            \"curso\": \"Electromecanica Grupo 2\",\r\n            \"handle\": \"\"\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"nombre\": \"Alicia Alejandra Mendizabal Figueroa\",\r\n            \"nivel\": \"9no Grado\",\r\n            \"curso\": \"D\",\r\n            \"handle\": \"\"\r\n        },\r\n        {\r\n            \"id\": 5,\r\n            \"nombre\": \"Boris Ilich Huezo Arriola\",\r\n            \"nivel\": \"Segundo año bachillerato\",\r\n            \"curso\": \"Administrativo Contable Grupo 1\",\r\n            \"handle\": \"\"\r\n        }\r\n    ]\r\n    \r\n\r\n    toggle = (id) => {\r\n        console.log(id)\r\n        this.setState({\r\n            id: id,\r\n            nombre: this.dataRows[id-1].nombre,\r\n            nivel: this.dataRows[id-1].nivel,\r\n            curso: this.dataRows[id-1].curso,\r\n            modal: !this.state.modal\r\n        });\r\n       \r\n    }\r\n\r\n    toggleModal = () =>{\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n      }\r\n    \r\n    handleClick = e => this.toggle(e.target.id);\r\n\r\n\r\n    componentWillMount(){\r\n        for (var i = 0; i < this.dataRows.length; i++) {\r\n            var idActual= this.dataRows[i].id;\r\n            this.dataRows[i].handle = \r\n            <div className=\"text-center\">\r\n                <MDBBtn id={idActual} color=\"orange\" size=\"sm\" onClick={this.handleClick} ><MDBIcon icon=\"pen\" className=\"mr-2\" /> Editar</MDBBtn>\r\n                <MDBBtn color=\"red\" size=\"sm\" onClick={this.rejectAlert}><MDBIcon icon=\"times\" className=\"mr-2\" /> Eliminar</MDBBtn>\r\n            </div>\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    render(){\r\n        \r\n        return (\r\n            <div >\r\n            <Navbar/>\r\n                <MDBContainer fluid>\r\n                    <MDBRow center className=\"my-5\">\r\n                        <MDBCol size=\"8\">\r\n                            <MDBCard>\r\n                                <MDBCardHeader>\r\n                                    <h1 className=\"text-center\">Asignar Evaluadores a Proyectos</h1>\r\n                                </MDBCardHeader>\r\n                                <MDBCardBody>\r\n                                <MDBRow>\r\n                                    <MDBCol size=\"6\" className=\"offset-3\">\r\n                                    <form>\r\n                                        <label className=\"d-block mt-3\"> Evaluador\r\n                                            <select className=\"browser-default custom-select\">\r\n                                                <option>Seleccione un evaluador...</option>\r\n                                                <option value=\"1\">Steven Benjamin Diaz Flores</option>\r\n                                                <option value=\"2\">Rodrigo Alejadro Castillo Monterrosa</option>\r\n                                                <option value=\"3\">Katherine Michelle Fuentes Medrano</option>\r\n                                                <option value=\"4\">Alicia Alejandra Mendizabal Figueroa</option>\r\n                                                <option value=\"5\">Boris Ilich Huezo Arriola</option>\r\n                                            </select>\r\n                                        </label>\r\n                                        <label className=\"d-block mt-3\"> Nivel\r\n                                            <select className=\"browser-default custom-select\" >\r\n                                                <option>Seleccione un nivel...</option>\r\n                                                <option value=\"1\">7mo Grado</option>\r\n                                                <option value=\"2\">8vo Grado</option>\r\n                                                <option value=\"3\">9no Grado</option>\r\n                                                <option value=\"4\">Primer año bachillerato</option>\r\n                                                <option value=\"5\">Segundo año bachillerato</option>\r\n                                                <option value=\"6\">Tercer año bachillerato</option>\r\n                                            </select>\r\n                                        </label>\r\n                                        <label className=\"d-block mt-3\"> Curso\r\n                                            <select className=\"browser-default custom-select\">\r\n                                                <option>Seleccione un curso...</option>\r\n                                                <option value=\"1\">A</option>\r\n                                                <option value=\"2\">B</option>\r\n                                                <option value=\"3\">C</option>\r\n                                                <option value=\"4\">D</option>\r\n                                                <option value=\"5\">Desarrollo de Software Grupo 1</option>\r\n                                                <option value=\"6\">Electronica Grupo 1</option>\r\n                                                <option value=\"7\">Electromecanica Grupo 2</option>\r\n                                                <option value=\"8\">Administrativo Contable Grupo 1</option>\r\n                                            </select>\r\n                                        </label>\r\n    \r\n                                        <div className=\"text-center py-4 mt-3\">\r\n                                    \r\n                                            <MDBBtn color=\"teal\" onClick={()=>{\r\n                                                this.aproveAlert('¡Guardada!','Asignación guardada.')\r\n                                            }}>\r\n                                                Asignar\r\n                                            <MDBIcon icon=\"paper-plane\" className=\"ml-2\" />\r\n                                            </MDBBtn>\r\n    \r\n                                        </div>\r\n                                    </form> \r\n                                \r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                        </MDBCol>\r\n                        <MDBCol className=\"mt-5\">\r\n                            <MDBCard>\r\n                                <MDBCardHeader>\r\n                                    <h1 className=\"text-center\">Listado de asignaciones</h1>\r\n                                    <MDBCol md=\"4\" className=\"offset-md-8\" >\r\n                                        <MDBInput label=\"Buscar\" icon=\"search\"/>\r\n                                    </MDBCol>\r\n                                </MDBCardHeader>\r\n                                <MDBCardBody>\r\n                                    <MDBTable btn responsive hover className=\"text-center\">\r\n                                        <MDBTableHead columns={this.columns} />\r\n                                        <MDBTableBody rows={this.dataRows} />\r\n                                    </MDBTable>\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <MDBModal isOpen={this.state.modal} toggle={this.toggleModal}>\r\n                    <MDBModalHeader toggle={this.toggleModal}>Editar Evaluador</MDBModalHeader>\r\n                    <MDBModalBody>\r\n                        <form>\r\n                        <label className=\"d-block mt-3\"> Evaluador\r\n                            <select name=\"nombre\" className=\"browser-default custom-select\"  value={this.state.nombre} onChange={this.handleChange}>\r\n                                <option>Seleccione un evaluador...</option>\r\n                                <option value=\"Steven Benjamin Diaz Flores\">Steven Benjamin Diaz Flores</option>\r\n                                <option value=\"Rodrigo Alejadro Castillo Monterrosa\">Rodrigo Alejadro Castillo Monterrosa</option>\r\n                                <option value=\"Katherine Michelle Fuentes Medrano\">Katherine Michelle Fuentes Medrano</option>\r\n                                <option value=\"Alicia Alejandra Mendizabal Figueroa\">Alicia Alejandra Mendizabal Figueroa</option>\r\n                                <option value=\"Boris Ilich Huezo Arriola\">Boris Ilich Huezo Arriola</option>\r\n                            </select>\r\n                        </label>\r\n                        <label className=\"d-block mt-3\"> Nivel\r\n                            <select name=\"nivel\" className=\"browser-default custom-select\"  value={this.state.nivel} onChange={this.handleChange}>\r\n                                <option>Seleccione un nivel...</option>\r\n                                <option value=\"7mo Grado\">7mo Grado</option>\r\n                                <option value=\"8vo Grado\">8vo Grado</option>\r\n                                <option value=\"9no Grado\">9no Grado</option>\r\n                                <option value=\"Primer año bachillerato\">Primer año bachillerato</option>\r\n                                <option value=\"Segundo año bachillerato\">Segundo año bachillerato</option>\r\n                                <option value=\"Tercer año bachillerato\">Tercer año bachillerato</option>\r\n                            </select>\r\n                        </label>\r\n                        <label className=\"d-block mt-3\"> Curso\r\n                            <select name=\"curso\" className=\"browser-default custom-select\"  value={this.state.curso} onChange={this.handleChange}>\r\n                                <option>Seleccione un curso...</option>\r\n                                <option value=\"A\">A</option>\r\n                                <option value=\"B\">B</option>\r\n                                <option value=\"C\">C</option>\r\n                                <option value=\"D\">D</option>\r\n                                <option value=\"Desarrollo de Software Grupo 1\">Desarrollo de Software Grupo 1</option>\r\n                                <option value=\"Electronica Grupo 1\">Electronica Grupo 1</option>\r\n                                <option value=\"Electromecanica Grupo 2\">Electromecanica Grupo 2</option>\r\n                                <option value=\"Administrativo Contable Grupo 1\">Administrativo Contable Grupo 1</option>\r\n                            </select>\r\n                        </label>\r\n                        <div className=\"float-right\">\r\n                            <MDBBtn color=\"secondary\" onClick={this.toggleModal}>Cerrar</MDBBtn>\r\n                            <MDBBtn color=\"primary\" onClick={()=>{this.aproveAlert('¡Modificado!','Asignación modificada.')}} >Guardar cambios</MDBBtn>\r\n                        </div>\r\n                        </form>\r\n                    </MDBModalBody>\r\n                </MDBModal>\r\n            </div>\r\n    \r\n        );\r\n    };\r\n}\r\n\r\n\r\n\r\nexport default Assignments;","import React, { Component } from \"react\";\r\nimport {\r\n    MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBCardHeader,\r\n    MDBTableHead, MDBTable, MDBTableBody, MDBBtn, MDBIcon, MDBInput,\r\n    MDBModal, MDBModalBody, MDBModalHeader\r\n} from 'mdbreact';\r\nimport Navbar from '../../../../navbar/components/Navbar';\r\nimport dataRows from './Evaluators.json';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nclass Evaluators extends Component{\r\n\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        modal: false,\r\n        id:0,\r\n        nombre: '',\r\n        correo: '',\r\n        telefono: '',\r\n        horario: '',\r\n        nivel: '',\r\n        vecesClick: 0\r\n      }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n\r\n      \r\ntoggle = (id) => {\r\n\r\n        this.setState({\r\n            id: id,\r\n            nombre: dataRows[id-1].nombre,\r\n            correo: dataRows[id-1].correo,\r\n            telefono: dataRows[id-1].telefono,\r\n            horario: dataRows[id-1].horario,\r\n            nivel: dataRows[id-1].nivel,\r\n            modal: !this.state.modal,\r\n            vecesClick: this.vecesClick++\r\n        });\r\n       \r\n}\r\n\r\ntoggleModal = () =>{\r\n    this.setState({\r\n        modal: !this.state.modal\r\n    });\r\n}\r\n\r\n\r\ncolumns = [\r\n    {\r\n        label: '#',\r\n        field: 'id',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Nombre',\r\n        field: 'nombre',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Correo',\r\n        field: 'correo',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Telefono',\r\n        field: 'telefono',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Horario',\r\n        field: 'horario',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Nivel Academico',\r\n        field: 'nivel',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Acciones',\r\n        field: 'acciones',\r\n        sort: 'asc'\r\n    }\r\n\r\n];\r\n\r\naproveAlert(){\r\n    Swal.fire(\r\n        '¡Modificado!',\r\n        'Cambios guardados.',\r\n        'success'\r\n      )\r\n    this.setState({\r\n    modal: !this.state.modal\r\n    });\r\n};\r\n\r\nhandleChange(event) {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\nhandleClick = e => this.toggle(e.target.id);\r\n\r\ncomponentWillMount(){\r\n    \r\n\r\n    for (var i = 0; i < dataRows.length; i++) {\r\n        var idActual= dataRows[i].id;\r\n        dataRows[i].handle = \r\n        <div className=\"text-center\">\r\n            <MDBBtn id={idActual} color=\"orange\" size=\"sm\" onClick={this.handleClick}><MDBIcon icon=\"pen\" className=\"mr-2\" /> Editar</MDBBtn>\r\n        </div>\r\n    }\r\n    \r\n}\r\n\r\n\r\nrender(){\r\n    \r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <MDBContainer fluid>\r\n                <MDBRow center className=\"my-5\">\r\n                    <MDBCol>\r\n                        <MDBCard>\r\n                            <MDBCardHeader>\r\n                                <h1 className=\"text-center\">Evaluadores Aprobados</h1>\r\n                                <MDBCol md=\"4\" className=\"offset-md-8\" >\r\n                                    <MDBInput label=\"Buscar\" icon=\"search\"/>\r\n                                </MDBCol>\r\n                            </MDBCardHeader>\r\n                            <MDBCardBody>\r\n                                <MDBTable btn responsive hover className=\"text-center\">\r\n                                    <MDBTableHead columns={this.columns} />\r\n                                    <MDBTableBody rows={dataRows} />\r\n                                </MDBTable>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n                <MDBModal isOpen={this.state.modal} toggle={this.toggleModal}>\r\n                    <MDBModalHeader toggle={this.toggleModal}>Editar Evaluador</MDBModalHeader>\r\n                    <MDBModalBody>\r\n                        <form>\r\n                            <MDBInput label=\"Codigo:\" hint={(this.state.id).toString()} disabled type=\"text\" />\r\n                            <MDBInput label=\"Nombre:\" name=\"nombre\" value={(this.state.nombre)} type=\"text\" onChange={this.handleChange} />\r\n                            <MDBInput label=\"Correo:\" name=\"correo\" value={(this.state.correo)} type=\"email\" onChange={this.handleChange} />\r\n                            <MDBInput label=\"Telefono:\" name=\"telefono\" value={(this.state.telefono).toString()} type=\"text\" onChange={this.handleChange} />\r\n                            <label className=\"d-block\">Horario:\r\n                                <select name=\"horario\" className=\"browser-default custom-select\" value={this.state.horario} onChange={this.handleChange} >\r\n                                    <option value=\"Jueves 8:00am-12:00pm\">Jueves 8:00am-12:00pm</option>\r\n                                    <option value=\"Jueves 1:00pm-4:00pm\">Jueves 1:00pm-4:00pm</option>\r\n                                    <option value=\"Viernes 8:00am-12:00pm\">Viernes 8:00am-12:00pm</option>\r\n                                    <option value=\"Viernes 1:00pm-4:00pm\">Viernes 1:00pm-4:00pm</option>\r\n                                    <option value=\"Sabado 8:00am-12:00pm\">Sabado 8:00am-12:00pm</option>\r\n                                    <option value=\"Sabado 1:00pm-4:00pm\">Sabado 1:00pm-4:00pm</option>\r\n                                    <option value=\"Domingo 8:00am-12:00pm\">Domingo 8:00am-12:00pm</option>\r\n                                    <option value=\"Domingo 1:00pm-4:00pm\">Domingo 1:00pm-4:00pm</option>\r\n                                </select>\r\n                            </label>\r\n                            <label className=\"d-block\">\r\n                            Nivel Academico:\r\n                                <select name=\"nivel\" className=\"browser-default custom-select\" value={this.state.nivel} onChange={this.handleChange} >\r\n                                <option value=\"Bachillerato Técnico\">Bachillerato Técnico</option>\r\n                                <option value=\"Técnico Universitario\">Técnico Universitario</option>\r\n                                <option value=\"Ingenieria\">Ingenieria</option>\r\n                                <option value=\"Licenciatura\">Licenciatura</option>\r\n                                <option value=\"Maestria\">Maestria</option>\r\n                                <option value=\"Doctorado\">Doctorado</option>\r\n                                </select>\r\n                            </label>\r\n                            <div className=\"float-right\">\r\n                                <MDBBtn color=\"secondary\" onClick={this.toggleModal}>Cerrar</MDBBtn>\r\n                                <MDBBtn color=\"primary\" onClick={()=>{this.aproveAlert()}} >Guardar cambios</MDBBtn>\r\n                            </div>\r\n                        </form>\r\n                    </MDBModalBody>\r\n                </MDBModal>\r\n            </MDBContainer>\r\n        </div>\r\n\r\n    );\r\n};\r\n}\r\n\r\nexport default Evaluators;","class Auth{\r\n    constructor(){\r\n        this.authenticated =false;\r\n    }\r\n\r\n    login(cb){\r\n        this.authenticated = true;\r\n        cb()\r\n    }\r\n\r\n    logout(cb){\r\n        this.authenticated = false;\r\n        cb()\r\n    }\r\n\r\n    isAuthenticated(){\r\n        return this.authenticated;\r\n    }\r\n\r\n}\r\n\r\nexport default new Auth()","import React from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBIcon } from 'mdbreact';\r\nimport auth from './auth'\r\n\r\n\r\n\r\n\r\nfunction LoginPage(props) {\r\n       return (<div>\r\n            <MDBContainer>\r\n                <MDBRow center className=\"my-5\">\r\n                    <MDBCol size=\"12\" md=\"6\" lg=\"5\">\r\n                        <MDBCard>\r\n                            <MDBCardBody>\r\n                                <form>\r\n                                    <p className=\"h4 text-center py-4\">Inicio de Sesión</p>\r\n                                    <div className=\"teal-text\">\r\n\r\n                                        <MDBInput\r\n                                            label=\"Correo electronico\"\r\n                                            icon=\"envelope\"\r\n                                            group\r\n                                            type=\"email\"\r\n                                            validate\r\n                                            error=\"wrong\"\r\n                                            success=\"right\"\r\n                                        />\r\n                                        <MDBInput\r\n                                            label=\"Contraseña\"\r\n                                            icon=\"unlock\"\r\n                                            group\r\n                                            type=\"password\"\r\n                                            validate\r\n                                            error=\"wrong\"\r\n                                            success=\"right\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"text-center py-4 mt-3\">\r\n                                \r\n                                        <MDBBtn color=\"teal\" type=\"submit\" onClick={\r\n                                            () =>{\r\n                                                auth.login(()=>{\r\n                                                    props.history.push(\"/admin\")\r\n                                                })\r\n                                            }\r\n                                        }>\r\n                                            Ingresar\r\n                                        <MDBIcon icon=\"paper-plane\" className=\"ml-2\" />\r\n                                        </MDBBtn>\r\n\r\n                                    </div>\r\n                                </form>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        </div>)\r\n    }\r\n\r\n\r\nexport default LoginPage;","import React from 'react';\r\nimport { MDBCol, MDBBtn, MDBCard, MDBCardBody, MDBCardText, MDBCardTitle, MDBIcon } from 'mdbreact';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Cards(props) {\r\n    return (\r\n        <MDBCol size=\"12\" sm=\"6\" md=\"4\" className=\"mt-4\">\r\n            <MDBCard className=\"text-center\" style={{height:350}}>\r\n            <MDBIcon icon={props.icon} style={{fontSize:150}} className=\"mt-2\"/>\r\n                <MDBCardBody>\r\n                    <MDBCardTitle>{props.titulo}</MDBCardTitle>\r\n                    <MDBCardText>{props.descripcion}</MDBCardText>\r\n                    <Link to={props.link}><MDBBtn >Acceder</MDBBtn></Link>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        </MDBCol>\r\n    )\r\n}\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol,MDBCard, MDBCardBody} from 'mdbreact';\r\nimport Cards from './Cards';\r\nimport Navbar from '../../../navbar/components/Navbar';\r\n\r\nconst info={\r\n    cards: [\r\n        {id: 1, titulo:'Candidatos',icon:'plus',link:'/candidates', descripcion:'Visualiza los evaluadores que se han postulado.'},\r\n        {id: 2, titulo:'Evaluadores',icon:'address-card',link:'/evaluators',  descripcion:'Gestiona los evaluadores ya aprobados.'},\r\n        {id: 3, titulo:'Asignaciones',icon:'check-square',link:'/assignments',  descripcion:'Relaciona evaluadores a sus respectivos proyectos.'},\r\n        {id: 4, titulo:'Control',icon:'list-alt',link:'/candidates',  descripcion:'Visualiza información de los evaluadores aprobados.'},\r\n        {id: 5, titulo:'Estado',icon:'bolt',link:'/candidates',  descripcion:'Cambia de estado a los evaluadores aprobados.'},\r\n        {id: 6, titulo:'Usuarios',icon:'users',link:'/candidates',  descripcion:'Gestiona las personas con acceso al sistema.'}\r\n    ]\r\n}\r\nconst Admin = () => {\r\n  return (\r\n    <div>\r\n      <Navbar/>\r\n        <MDBContainer fluid>\r\n          <MDBRow center className=\"my-5\">\r\n            <MDBCol>\r\n              <MDBCard>\r\n                <MDBCardBody>\r\n                    <h1 className=\"text-center\">Sistema de Control de Evaluadores</h1>\r\n                      <MDBRow center>\r\n                      {\r\n                          info.cards.map((item)=>{\r\n                              return <Cards key={item.id} {...item} />\r\n                          })\r\n                      }\r\n                      \r\n                      </MDBRow>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n          </MDBRow> \r\n        </MDBContainer>\r\n      </div>\r\n      \r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport auth from './auth';\r\n\r\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route {...rest} render={\r\n            (props) => {\r\n                if (auth.isAuthenticated()) {\r\n                    return <Component {...props} />\r\n                } else {\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname: \"/login\",\r\n                            state: {\r\n                                form: props.location\r\n                            }\r\n                        }\r\n                    } />\r\n                }\r\n\r\n            }\r\n        } />\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Register from './register/components/Register';\r\nimport Candidates from './main/admin/components/candidates/Candidates';\r\nimport Assignments from './main/admin/components/assignments/Assignments';\r\nimport Evaluators from './main/admin/components/evaluators/Evaluators';\r\nimport Login from './login/components/Login';\r\nimport Admin from './main/admin/components/Admin';\r\nimport {ProtectedRoute} from './login/components/protectedRoute';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Register} />\r\n            <ProtectedRoute exact path=\"/admin\" component={Admin} />\r\n            <ProtectedRoute exact path=\"/candidates\" component={Candidates} />\r\n            <ProtectedRoute exact path=\"/evaluators\" component={Evaluators} />\r\n            <ProtectedRoute exact path=\"/assignments\" component={Assignments} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            \r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\n\r\nimport App from './App.jsx';\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}