{"version":3,"sources":["navbar/components/Navbar.js","login/components/Login.js","main/admin/components/Cards.js","main/admin/components/Admin.js","main/admin/components/candidates/Candidates.js","main/admin/components/evaluators/Evaluators.js","App.jsx","registerServiceWorker.js","index.js"],"names":["NavbarPage","state","isOpen","toggleCollapse","_this","setState","react_default","a","createElement","mdbreact_esm","color","dark","expand","className","onClick","this","id","navbar","right","to","Component","FormLoginPage","center","size","md","lg","label","icon","group","type","validate","error","success","value","Link","Cards","props","sm","style","height","fontSize","titulo","descripcion","link","info","cards","Admin","fluid","map","item","components_Cards","Object","assign","key","columns","field","sort","aproveAlert","Swal","fire","rejectAlert","title","text","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","then","result","i","dataRows","length","handle","Candidates","btn","responsive","hover","rows","Evaluators","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggle","nombre","correo","telefono","horario","nivel","modal","vecesClick","toggleModal","handleClick","e","target","handleChange","bind","assertThisInitialized","event","checked","name","defineProperty","idActual","_this2","hint","toString","disabled","onChange","App","BrowserRouter","Navbar","Route","exact","path","component","Login","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d3d73d21.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse} from \"mdbreact\";\r\n\r\nclass NavbarPage extends Component {\r\nstate = {\r\n  isOpen: false\r\n};\r\n\r\ntoggleCollapse = () => {\r\n  this.setState({ isOpen: !this.state.isOpen });\r\n}\r\n\r\n\r\nrender() {\r\n  return (\r\n      <MDBNavbar color=\"default-color\" dark expand=\"md\">\r\n        <MDBNavbarBrand>\r\n          <strong className=\"white-text d-none d-md-block\">Sistema de Control de Evaluadores</strong>\r\n          <strong className=\"white-text d-block d-md-none\">SCE</strong>\r\n        </MDBNavbarBrand>\r\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n          <MDBNavbarNav right>\r\n            <MDBNavItem>\r\n              <MDBNavLink to=\"/\" >Registro</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink to=\"/admin\">Administrador</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink to=\"/admin\">Usuario</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink to=\"/\">Cerrar Sesión</MDBNavLink>\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n          \r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n\r\n    );\r\n  }\r\n\r\nhandleClick(){\r\n\r\n  }\r\n}\r\n\r\nexport default NavbarPage;","import React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBIcon } from 'mdbreact';\nimport './Login.css';\nimport { Link } from 'react-router-dom';\n\nconst FormLoginPage = () => {\n  return (\n    <div>\n        <MDBContainer>\n          <MDBRow center className=\"my-5\">\n            <MDBCol size=\"12\" md=\"8\" lg=\"6\">\n              <MDBCard>\n                <MDBCardBody>\n                  <form>\n                    <p className=\"h4 text-center py-4\">Registro de Evaluadores</p>\n                    <div className=\"teal-text\">\n                      <MDBInput\n                        label=\"Nombre completo\"\n                        icon=\"user\"\n                        group\n                        type=\"text\"\n                        validate\n                        error=\"wrong\"\n                        success=\"right\"\n                      />\n                      <MDBInput\n                        label=\"Correo electronico\"\n                        icon=\"envelope\"\n                        group\n                        type=\"email\"\n                        validate\n                        error=\"wrong\"\n                        success=\"right\"\n                      />\n                      <MDBInput\n                        label=\"Telefono\"\n                        icon=\"hashtag\"\n                        group\n                        type=\"number\"\n                        validate\n                        error=\"wrong\"\n                        success=\"right\"\n                      />\n                      <MDBRow className=\"mb-4\">\n                        <MDBCol size=\"1\">\n                          <MDBIcon icon=\"calendar-alt\" className=\"iconRegister\" />\n                        </MDBCol>\n                        <MDBCol>\n                          <select className=\"browser-default custom-select\">\n                            <option>Seleccione un horario...</option>\n                            <option value=\"1\">Jueves 8:00am-12:00pm</option>\n                            <option value=\"2\">Jueves 1:00pm-4:00pm</option>\n                            <option value=\"3\">Viernes 8:00am-12:00pm</option>\n                            <option value=\"4\">Viernes 1:00pm-4:00pm</option>\n                            <option value=\"5\">Sabado 8:00am-12:00pm</option>\n                            <option value=\"6\">Sabado 1:00pm-4:00pm</option>\n                            <option value=\"7\">Domingo 8:00am-12:00pm</option>\n                            <option value=\"8\">Domingo 1:00pm-4:00pm</option>\n                          </select>\n                        </MDBCol>\n                      </MDBRow>\n                      <MDBRow className=\"mt-4 pt-2\">\n                        <MDBCol size=\"1\">\n                          <MDBIcon icon=\"university\" className=\"iconRegister\" />\n                        </MDBCol>\n                        <MDBCol>\n                          <select className=\"browser-default custom-select\">\n                            <option>Seleccione un grado academico...</option>\n                            <option value=\"1\">Bachillerato Técnico</option>\n                            <option value=\"2\">Tecnico Universitario</option>\n                            <option value=\"3\">Ingenieria</option>\n                            <option value=\"4\">Licenciatura</option>\n                            <option value=\"5\">Maestria</option>\n                            <option value=\"6\">Doctorado</option>\n                          </select>\n                        </MDBCol>\n                      </MDBRow>\n                    </div>\n\n                    <div className=\"text-center py-4 mt-3\">\n                      <Link to=\"/admin\">\n                        <MDBBtn color=\"teal\" type=\"submit\">\n                          Enviar\n                          <MDBIcon icon=\"paper-plane\" className=\"ml-2\"/>\n                        </MDBBtn>\n                      </Link>\n                    </div>\n                  </form>\n                </MDBCardBody>\n              </MDBCard>\n            </MDBCol>\n          </MDBRow> \n        </MDBContainer>\n      </div>\n      \n  );\n};\n\nexport default FormLoginPage;","import React from 'react';\r\nimport { MDBCol, MDBBtn, MDBCard, MDBCardBody, MDBCardText, MDBCardTitle, MDBIcon } from 'mdbreact';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Cards(props) {\r\n    return (\r\n        <MDBCol size=\"12\" sm=\"6\" md=\"4\" className=\"mt-4\">\r\n            <MDBCard className=\"text-center\" style={{height:350}}>\r\n            <MDBIcon icon={props.icon} style={{fontSize:150}} className=\"mt-2\"/>\r\n                <MDBCardBody>\r\n                    <MDBCardTitle>{props.titulo}</MDBCardTitle>\r\n                    <MDBCardText>{props.descripcion}</MDBCardText>\r\n                    <Link to={props.link}><MDBBtn >Acceder</MDBBtn></Link>\r\n                </MDBCardBody>\r\n            </MDBCard>\r\n        </MDBCol>\r\n    )\r\n}\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol,MDBCard, MDBCardBody} from 'mdbreact';\r\nimport Cards from './Cards';\r\n\r\nconst info={\r\n    cards: [\r\n        {id: 1, titulo:'Candidatos',icon:'plus',link:'/candidates', descripcion:'Visualiza los evaluadores que se han postulado.'},\r\n        {id: 2, titulo:'Evaluadores',icon:'address-card',link:'/evaluators',  descripcion:'Gestiona los evaluadores ya aprobados.'},\r\n        {id: 3, titulo:'Asignaciones',icon:'check-square',link:'/candidates',  descripcion:'Relaciona evaluadores a sus respectivos proyectos.'},\r\n        {id: 4, titulo:'Control',icon:'list-alt',link:'/candidates',  descripcion:'Visualiza información de los evaluadores aprobados.'},\r\n        {id: 5, titulo:'Estado',icon:'bolt',link:'/candidates',  descripcion:'Cambia de estado a los evaluadores aprobados.'},\r\n        {id: 6, titulo:'Usuarios',icon:'users',link:'/candidates',  descripcion:'Gestiona las personas con acceso al sistema.'}\r\n    ]\r\n}\r\nconst Admin = () => {\r\n  return (\r\n    <div>\r\n        <MDBContainer fluid>\r\n          <MDBRow center className=\"my-5\">\r\n            <MDBCol>\r\n              <MDBCard>\r\n                <MDBCardBody>\r\n                    <h1 className=\"text-center\">Sistema de Control de Evaluadores</h1>\r\n                      <MDBRow center>\r\n                      {\r\n                          info.cards.map((item)=>{\r\n                              return <Cards key={item.id} {...item} />\r\n                          })\r\n                      }\r\n                      \r\n                      </MDBRow>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n          </MDBRow> \r\n        </MDBContainer>\r\n      </div>\r\n      \r\n  );\r\n};\r\n\r\nexport default Admin;","import React from \"react\";\r\nimport {\r\n    MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBCardHeader,\r\n    MDBTableHead, MDBTable, MDBTableBody, MDBBtn, MDBIcon\r\n} from 'mdbreact';\r\nimport dataRows from './Candidates.json';\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst columns = [\r\n    {\r\n        label: '#',\r\n        field: 'id',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Nombre',\r\n        field: 'nombre',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Correo',\r\n        field: 'correo',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Telefono',\r\n        field: 'telefono',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Horario',\r\n        field: 'horario',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Nivel Academico',\r\n        field: 'nivel',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Acciones',\r\n        field: 'acciones',\r\n        sort: 'asc'\r\n    }\r\n\r\n];\r\n\r\nfunction aproveAlert(){\r\n    Swal.fire(\r\n        '¡Aprobado!',\r\n        'Evaluador aprobado.',\r\n        'success'\r\n      )\r\n};\r\n\r\nfunction rejectAlert(){\r\n    Swal.fire({\r\n        title: '¿Estas seguro?',\r\n        text: \"No podras recuperar la información de un candidato rechazado.\",\r\n        type: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        cancelButtonText:'Cancelar',\r\n        confirmButtonText: 'Si, rechazar'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          Swal.fire(\r\n            '¡Rechazado!',\r\n            'Evaluador rechazado.',\r\n            'success'\r\n          )\r\n        }\r\n      })\r\n}\r\n\r\n\r\nfor (var i = 0; i < dataRows.length; i++) {\r\n    dataRows[i].handle = \r\n    <div className=\"text-center\">\r\n        <MDBBtn color=\"green\" size=\"sm\" onClick={aproveAlert}><MDBIcon icon=\"check\" className=\"mr-2\" /> Aprobar</MDBBtn>\r\n        <MDBBtn color=\"red\" size=\"sm\" onClick={rejectAlert}><MDBIcon icon=\"times\" className=\"mr-2\" /> Rechazar</MDBBtn>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst Candidates = () => {\r\n    return (\r\n        <div className=\"text-center\">\r\n            <MDBContainer fluid>\r\n                <MDBRow center className=\"my-5\">\r\n                    <MDBCol>\r\n                        <MDBCard>\r\n                            <MDBCardHeader>\r\n                                <h1 className=\"text-center\">Candidatos a Evaluadores</h1>\r\n                            </MDBCardHeader>\r\n                            <MDBCardBody>\r\n                                <MDBTable btn responsive hover>\r\n                                    <MDBTableHead columns={columns} />\r\n                                    <MDBTableBody rows={dataRows} />\r\n                                </MDBTable>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Candidates;","import React, { Component } from \"react\";\r\nimport {\r\n    MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBCardHeader,\r\n    MDBTableHead, MDBTable, MDBTableBody, MDBBtn, MDBIcon, MDBInput,\r\n    MDBModal, MDBModalBody, MDBModalHeader\r\n} from 'mdbreact';\r\nimport dataRows from './Evaluators.json';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nclass Evaluators extends Component{\r\n\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        modal: false,\r\n        id:0,\r\n        nombre: '',\r\n        correo: '',\r\n        telefono: '',\r\n        horario: '',\r\n        nivel: '',\r\n        vecesClick: 0\r\n      }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n\r\n      \r\ntoggle = (id) => {\r\n\r\n        this.setState({\r\n            id: id,\r\n            nombre: dataRows[id-1].nombre,\r\n            correo: dataRows[id-1].correo,\r\n            telefono: dataRows[id-1].telefono,\r\n            horario: dataRows[id-1].horario,\r\n            nivel: dataRows[id-1].nivel,\r\n            modal: !this.state.modal,\r\n            vecesClick: this.vecesClick++\r\n        });\r\n       \r\n}\r\n\r\ntoggleModal = () =>{\r\n    this.setState({\r\n        modal: !this.state.modal\r\n    });\r\n}\r\n\r\n\r\ncolumns = [\r\n    {\r\n        label: '#',\r\n        field: 'id',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Nombre',\r\n        field: 'nombre',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Correo',\r\n        field: 'correo',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Telefono',\r\n        field: 'telefono',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Horario',\r\n        field: 'horario',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Nivel Academico',\r\n        field: 'nivel',\r\n        sort: 'asc'\r\n    },\r\n    {\r\n        label: 'Acciones',\r\n        field: 'acciones',\r\n        sort: 'asc'\r\n    }\r\n\r\n];\r\n\r\naproveAlert(){\r\n    Swal.fire(\r\n        '¡Modificado!',\r\n        'Cambios guardados.',\r\n        'success'\r\n      )\r\n    this.setState({\r\n    modal: !this.state.modal\r\n    });\r\n};\r\n\r\nhandleChange(event) {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\nhandleClick = e => this.toggle(e.target.id);\r\n\r\ncomponentWillMount(){\r\n    \r\n\r\n    for (var i = 0; i < dataRows.length; i++) {\r\n        var idActual= dataRows[i].id;\r\n        dataRows[i].handle = \r\n        <div className=\"text-center\">\r\n            <MDBBtn id={idActual} color=\"orange\" size=\"sm\" onClick={this.handleClick}><MDBIcon icon=\"pen\" className=\"mr-2\" /> Editar</MDBBtn>\r\n        </div>\r\n    }\r\n    \r\n}\r\n\r\n\r\nrender(){\r\n    \r\n    return (\r\n        <div>\r\n            <MDBContainer fluid>\r\n                <MDBRow center className=\"my-5\">\r\n                    <MDBCol>\r\n                        <MDBCard>\r\n                            <MDBCardHeader>\r\n                                <h1 className=\"text-center\">Evaluadores Aprobados</h1>\r\n                                <MDBCol md=\"4\" className=\"offset-md-8\" >\r\n                                    <MDBInput label=\"Buscar\" icon=\"search\"/>\r\n                                </MDBCol>\r\n                            </MDBCardHeader>\r\n                            <MDBCardBody>\r\n                                <MDBTable btn responsive hover className=\"text-center\">\r\n                                    <MDBTableHead columns={this.columns} />\r\n                                    <MDBTableBody rows={dataRows} />\r\n                                </MDBTable>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n                <MDBModal isOpen={this.state.modal} toggle={this.toggleModal}>\r\n                    <MDBModalHeader toggle={this.toggleModal}>Editar Evaluador</MDBModalHeader>\r\n                    <MDBModalBody>\r\n                        <form>\r\n                            <MDBInput label=\"Codigo:\" hint={(this.state.id).toString()} disabled type=\"text\" />\r\n                            <MDBInput label=\"Nombre:\" name=\"nombre\" value={(this.state.nombre)} type=\"text\" onChange={this.handleChange} />\r\n                            <MDBInput label=\"Correo:\" name=\"correo\" value={(this.state.correo)} type=\"email\" onChange={this.handleChange} />\r\n                            <MDBInput label=\"Telefono:\" name=\"telefono\" value={(this.state.telefono).toString()} type=\"text\" onChange={this.handleChange} />\r\n                            <label className=\"d-block\">Horario:\r\n                                <select className=\"browser-default custom-select\" value={this.state.horario} onChange={this.handleChange} >\r\n                                    <option value=\"Jueves 8:00am-12:00pm\">Jueves 8:00am-12:00pm</option>\r\n                                    <option value=\"Jueves 1:00pm-4:00pm\">Jueves 1:00pm-4:00pm</option>\r\n                                    <option value=\"Viernes 8:00am-12:00pm\">Viernes 8:00am-12:00pm</option>\r\n                                    <option value=\"Viernes 1:00pm-4:00pm\">Viernes 1:00pm-4:00pm</option>\r\n                                    <option value=\"Sabado 8:00am-12:00pm\">Sabado 8:00am-12:00pm</option>\r\n                                    <option value=\"Sabado 1:00pm-4:00pm\">Sabado 1:00pm-4:00pm</option>\r\n                                    <option value=\"Domingo 8:00am-12:00pm\">Domingo 8:00am-12:00pm</option>\r\n                                    <option value=\"Domingo 1:00pm-4:00pm\">Domingo 1:00pm-4:00pm</option>\r\n                                </select>\r\n                            </label>\r\n                            <label className=\"d-block\">\r\n                            Nivel Academico:\r\n                                <select className=\"browser-default custom-select\" value={this.state.nivel} onChange={this.handleChange} >\r\n                                <option value=\"Bachillerato Técnico\">Bachillerato Técnico</option>\r\n                                <option value=\"Técnico Universitario\">Técnico Universitario</option>\r\n                                <option value=\"Ingenieria\">Ingenieria</option>\r\n                                <option value=\"Licenciatura\">Licenciatura</option>\r\n                                <option value=\"Maestria\">Maestria</option>\r\n                                <option value=\"Doctorado\">Doctorado</option>\r\n                                </select>\r\n                            </label>\r\n                            <div className=\"float-right\">\r\n                                <MDBBtn color=\"secondary\" onClick={this.toggleModal}>Cerrar</MDBBtn>\r\n                                <MDBBtn color=\"primary\" onClick={()=>{this.aproveAlert()}} >Guardar cambios</MDBBtn>\r\n                            </div>\r\n                        </form>\r\n                    </MDBModalBody>\r\n                </MDBModal>\r\n            </MDBContainer>\r\n        </div>\r\n\r\n    );\r\n};\r\n}\r\n\r\nexport default Evaluators;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Navbar from './navbar/components/Navbar';\r\nimport Login from './login/components/Login';\r\nimport Admin from './main/admin/components/Admin';\r\nimport Candidates from './main/admin/components/candidates/Candidates';\r\nimport Evaluators from './main/admin/components/evaluators/Evaluators';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Navbar/>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/admin\" component={Admin} />\r\n          <Route path=\"/candidates\" component={Candidates} />\r\n          <Route path=\"/evaluators\" component={Evaluators} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nimport App from './App.jsx';\n\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\nregisterServiceWorker();"],"sourceRoot":""}